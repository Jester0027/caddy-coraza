name: Build and Push Caddy+Coraza

permissions:
  packages: write
  contents: read

on:
  workflow_dispatch:
  schedule:
    - cron: "0 1 * * *"

env:
  GH_TOKEN: ${{ github.token }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Get latest Caddy version
        id: caddy
        run: |
          latest=$(curl -s https://api.github.com/repos/caddyserver/caddy/releases/latest | jq -r .tag_name)
          echo "version=${latest#v}" >> $GITHUB_OUTPUT

      - name: Lowercase owner
        id: owner
        run: echo "owner=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Check if image exists on GHCR
        run: |
          TAG="${{ steps.caddy.outputs.version }}"
          OWNER="${{ steps.owner.outputs.owner }}"
          EXISTS=$(gh api -H "Accept: application/vnd.github.v3+json" \
                      "/users/$OWNER/packages/container/caddy-coraza/versions" \
                      | jq -r '.[].metadata.container.tags[]?' \
                      | grep "^$TAG$" || true)
          if [ -n "$EXISTS" ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "Image ghcr.io/$OWNER/caddy-coraza:$TAG already exists. Skipping build."
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "Image does not exist. Proceeding with build."
          fi

      - name: Build Docker image
        if: steps.check_image.outputs.exists == 'false'
        run: |
          OWNER="${{ steps.owner.outputs.owner }}"
          docker build \
            --build-arg CADDY_VERSION=${{ steps.caddy.outputs.version }} \
            -f Containerfile \
            -t ghcr.io/$OWNER/caddy-coraza:${{ steps.caddy.outputs.version }} .

      - name: Log in to GHCR
        if: steps.check_image.outputs.exists == 'false'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Push Docker image
        if: steps.check_image.outputs.exists == 'false'
        run: |
          OWNER="${{ steps.owner.outputs.owner }}"
          docker push ghcr.io/$OWNER/caddy-coraza:${{ steps.caddy.outputs.version }}
          docker tag ghcr.io/$OWNER/caddy-coraza:${{ steps.caddy.outputs.version }} ghcr.io/$OWNER/caddy-coraza:latest
          docker push ghcr.io/$OWNER/caddy-coraza:latest
